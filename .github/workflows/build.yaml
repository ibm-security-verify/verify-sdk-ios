# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Verify SDK release

on:
  push:
    branches:
    - main
    tags:
      - 'v*'
      
jobs:
  build_and_deploy:
    name: Build and Deploy
    env:
      SYMBOL_GRAPHS_DIR: symbol-graphs
      DERIVED_DATA_DIR: derived-data
      DOCC_SOURCE_DIR: ios-sdk.docc
    runs-on: macos-latest
    outputs:
      github_sha: ${{ github.sha }}
      event_before: ${{ github.event.before }}
    steps:
      - name: Checkout Swift
        uses: actions/checkout@v2
      - uses: swift-actions/setup-swift@v1
        with:
          swift-version: "5.9"
      - name: Checkout Swift-docc
        uses: actions/checkout@v2
        with:
          repository: apple/swift-docc
          path: swift-docc
      - name: Setup Xcode 16.0
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.0.0'
      - name: Generate Target Symbol Graphs
        run: |
          swift package resolve

          mkdir -p ${{ env.SYMBOL_GRAPHS_DIR }} && \
          xcodebuild docbuild \
          -scheme "IBM Security Verify-Package" \
          -destination "generic/platform=iOS" \
          -derivedDataPath ${{ env.DERIVED_DATA_DIR }}
          
      - name: Merging Target Symbol Graphs
        run: |
          cp -r ${{ env.DERIVED_DATA_DIR }}/Build/Intermediates.noindex/*.build/Debug-iphoneos/*.build/symbol-graph/ ${{ env.SYMBOL_GRAPHS_DIR }}
          
      - name: Generate Symbol Conversaion
        run: |
          mkdir -p ${{ env.DOCC_SOURCE_DIR }}

          git clone https://github.com/apple/swift-docc-render-artifact.git
          export DOCC_HTML_DIR=$(dirname $(xcrun --find docc))/../share/docc/render
                      
          $(xcrun --find docc) convert ${{ env.DOCC_SOURCE_DIR }} \
            --fallback-display-name "IBM Security Verify iOS SDK" \
            --fallback-bundle-identifier com.ibm.verify.ios.sdk \
            --fallback-bundle-version 1.0.0 \
            --additional-symbol-graph-dir ${{ env.SYMBOL_GRAPHS_DIR }}
        
          echo "Symbols directory ${{ env.SYMBOL_GRAPHS_DIR }}"
          echo "docc container ${{ env.DOCC_SOURCE_DIR }}"
          
      - name: Generate Documentation
        run: |
          $(xcrun --find docc) process-archive transform-for-static-hosting ${{ env.DOCC_SOURCE_DIR }}/.docc-build --hosting-base-path /ios
         
      - name: Push Github Pages
        run: |
          git clone https://github.com/ibm-security-verify/ibm-security-verify.github.io.git
          cd ibm-security-verify.github.io
          git checkout master
          cd ..
          rm -r ibm-security-verify.github.io/ios/*
          mkdir -p ibm-security-verify.github.io/ios/
          cp -R ${{ env.DOCC_SOURCE_DIR }}/.docc-build/. ibm-security-verify.github.io/ios
          cd ibm-security-verify.github.io
          git add .
          git commit -m "[GitHub Actions] Auto-Documentation Update"
          git status
          git config --get remote.origin.url
          git remote set-url origin https://${{ secrets.API_TOKEN_GITHUB }}@github.com/ibm-security-verify/ibm-security-verify.github.io.git
          git push origin
          git config --get remote.origin.url
  job_summary:
    name: Update job summary
    runs-on: ubuntu-latest
    needs: build_and_deploy
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 3
      - name: Add markdown
        run: |
          echo '## Build Summary :white_check_mark:' >> $GITHUB_STEP_SUMMARY
          echo '### Documentation' >> $GITHUB_STEP_SUMMARY
          echo 'The documentation has been successfully created, and can be accessed [here.](https://ibm-security-verify.github.io/)' >> $GITHUB_STEP_SUMMARY
          echo '### Files Changed' >> $GITHUB_STEP_SUMMARY
          echo -n 'Count: '  >> $GITHUB_STEP_SUMMARY
          git diff --name-only HEAD~ | wc -l | awk '{$1=$1;print}' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          git diff --name-only HEAD~ >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
